" zebulon
" colorscheme for neovim (256 colors)
" Copyright (C) 2024 thjbdvlt

" syntax reset
hi! clear
set background=light
lua require 'zebulon'
let g:colors_name="zebulon"
"
" " Normal is in the most readable colors: black on white background.
" hi! Normal cterm=NONE ctermbg=231 ctermfg=016
" " as in many language there is no such thing as 'normal' (but in markdown,
" " in which i write a lot, most of text is Normal), it seems
" " preferable to me if at least one other group has these colors.
" " i think that Variable/Identifier or Function are a good option.
" hi! link Identifier Normal
" hi! link @variable Identifier
" hi! link @parameter @variable
" hi! link @field @variable
"
" " function could have long names, just as variables, so it's seems better
" " to gave them a dark readable color.
" hi! Function ctermfg=19  " or 18?
" hi! link @function Function
" hi! link @function.builtin @function
" hi! link @function.call @function
" hi! link @method @function
"
" " As comments has a status different from all other syntax groups, it
" " is the only one which is italic. as they are often used as a
" " 'deactivated' mechanism, grey seems to be meaningfull: between code
" " (foreground) and non-code (background).
" hi! Comment cterm=italic ctermfg=145
"
" " Statement seems to be pretty short, and it is good if it is very
" " different from other groups such as variable and functions.
" " yellow seems to be a good option, then. plus, i don't see anything 
" " (appart from interface and comments) that could be yellow, because it 
" " makes long names unreadable.
" hi! Statement cterm=NONE ctermfg=178
" hi! link Include Statement
" hi! link PreProc Statement
"
" " operator in red, same reasons as for yellow.
" hi! Operator cterm=NONE ctermfg=160
" hi! link @operator Operator
"
" " in my writing practice, strings are very commons, and can be very 
" " longs. and i need to read it (for example, i use it also for 
" " highlighting quotes in markdown, so i need a very readable color, once
" " again.
" hi! String cterm=NONE ctermfg=28
"
" " string is a subtype of constant, so it's seems good if both have 
" " near colors (turquoise / green seems near).
" hi! Constant cterm=NONE ctermfg=30
" hi! link @constant Constant
" hi! link Boolean @constant
" hi! link @number @constant
" hi! link @character @constant
" hi! link @constant.builtin @constant
"
" " other things in pink/magenta (different tones)
" hi! Type cterm=NONE ctermfg=163 " or: 126, 207, 200, 162?
" hi! link @type Type
" hi! link @constructor Type
" hi! link @type.builtin Type
"
" hi! Special cterm=NONE ctermfg=200
" hi! link Title Special
"
" hi! Punctuation cterm=NONE ctermfg=89
" hi! link @punctuation Punctuation
"
" " cursor must be very visible, yellow seems good (or pink?)
" hi! Cursor         ctermbg=212 ctermfg=214
" " i dislike backgrounding the cursor line, so i highlight instead the 
" " CursorLineNr, so i quickly see where the cursor is.
" hi! CursorLine     cterm=NONE
" hi! CursorLineNr   ctermfg=178 cterm=NONE
" hi! CursorLineSign ctermfg=231 cterm=NONE
"
" hi! MatchParen     ctermbg=207 ctermfg=231 cterm=NONE
"
" " the rest of the interface should be discrete, i think grey 
" " is a good thing. so i put grey for anything else.
" "
" " for Pmenu (especially if it spams very often), a light background.
" " 255 is a light grey. good for backgrounds.
" hi! Pmenu          ctermfg=016 ctermbg=255
" hi! Visual         ctermbg=255
"
" " i don't use that much LineNr (i jump using Leap.vim), so lineNr 
" " doesn't need to be visible.
" hi! LineNr         ctermfg=254 ctermbg=231
"
" " folding white so there is no horizontal bars. i think that the 
" " dotted line is enough.
" hi! Folded         cterm=NONE  ctermbg=231 ctermfg=016
" hi! FoldColumn     ctermfg=145 ctermbg=231
"
" " NonText give no usefull information: nearly invisible.
" hi! NonText        cterm=NONE  ctermfg=255 ctermbg=231
" hi! WinSeparator   cterm=NONE  ctermfg=255 ctermbg=231
"
" " but ModeMsg give usefull informations, grey too but more visible.
" hi! ModeMsg        cterm=NONE  ctermfg=016 ctermbg=231
" hi! NormalFloat    ctermbg=231
"
" " discrete sign column (gr)
" hi! SignColumn     ctermbg=231 ctermfg=145
" hi! TabLine        cterm=NONE  ctermfg=145
" hi! TabLineFill    ctermfg=231 cterm=none
" hi! TabLineSel     cterm=NONE  ctermfg=016
" hi! VertSplit      ctermfg=231 cterm=none
"
" " StatusLine (if not LuaLine or something) is simple and discrete too.
" hi! StatusLine     cterm=none  ctermbg=255 ctermfg=016
" hi! StatusLineNC   cterm=none  ctermbg=231 ctermfg=145
"
" " Errors must be very visible.
" hi! Error          ctermbg=160 ctermfg=231
" hi! DiagnosticError ctermfg=160 ctermbg=231
"
" " all others diagnostic should not be too visible.
" hi! DiagnosticFloatingHint ctermfg=145
" hi! link DiagnosticVirtualTextHint DiagnosticFloatingHint
" hi! link DiagnosticSignHint DiagnosticFloatingHint
"
" hi! link LspReferenceText Visual
" hi! link LspReferenceRead Visual
" hi! link LspReferenceWrite Visual
"
"
" " FileType specifics
"
" " no function in markdown, so i use it for code and codeBlock.
" hi! link markdownCode Function
" hi! link markdownCodeBlock markdownCode
" hi! Link cterm=NONE ctermfg=025
"
